basePath: /api/v1
definitions:
  model.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
      updated_at:
        type: string
      user_id:
        description: Associate task with a user
        type: integer
    type: object
  model.TaskStatus:
    enum:
    - pending
    - in_process
    - completed
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusInProcess
    - StatusCompleted
  model.UpdateTask:
    properties:
      description:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
      title:
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: Service for managing tasks
  title: 'Taskkr: Task Management API'
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks with pagination and optional filtering
      parameters:
      - description: Filter by status
        enum:
        - pending
        - in_process
        - completed
        in: query
        name: status
        type: string
      - description: Title filter
        in: query
        name: title
        type: string
      - description: Page filter
        in: query
        name: page
        type: string
      - description: PageSize filter
        in: query
        name: page_size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get list of tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a task with title, description, etc.
      parameters:
      - description: Task info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task with given ID
      parameters:
      - description: ID filter
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get single task based on id if present
      parameters:
      - description: ID filter
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get single task based on id query param
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: UPdate a task with given ID and values
      parameters:
      - description: ID filter
        in: path
        name: id
        required: true
        type: integer
      - description: Task update info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.UpdateTask'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update a task
      tags:
      - tasks
swagger: "2.0"
